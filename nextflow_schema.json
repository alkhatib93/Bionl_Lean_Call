{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/<your-org-or-user>/Bionl_Lean_Call/main/nextflow_schema.json",
  "title": "Bionl_Lean_Call parameters",
  "description": "Germline ACMG-SFâ€“focused workflow with optional upstream Sarek and post-Sarek QC/annotation/reporting.",
  "type": "object",

  "$defs": {
    "io_options": {
      "title": "Output",
      "type": "object",
      "fa_icon": "fas fa-folder-open",
      "required": ["outdir"],
      "properties": {
        "outdir": {
          "type": "string",
          "description": "Directory where analysis results will be saved.",
          "help_text": "Results are organized by sample with qc/, vcf/, and reports/.",
          "format": "directory-path"
        }
      }
    },

    "sarek_control": {
      "title": "Upstream Sarek control",
      "type": "object",
      "fa_icon": "fas fa-project-diagram",
      "required": ["run_sarek"],
      "properties": {
        "run_sarek": {
          "type": "boolean",
          "default": true,
          "description": "Run nf-core/sarek (true) or reuse existing BAM/VCF (false).",
          "fa_icon": "fas fa-toggle-on"
        },
        "samplesheet": {
          "type": "string",
          "default": "",
          "description": "FASTQ samplesheet for Sarek (only used when run_sarek=true).",
          "fa_icon": "fas fa-file-csv",
          "format": "file-path",
          "mimetype": "text/csv",
          "pattern": "^\\S*\\.csv$"
        },
        "sarek_outdir": {
          "type": "string",
          "default": "",
          "description": "Existing Sarek output directory (optional when run_sarek=false).",
          "fa_icon": "fas fa-folder-open",
          "format": "directory-path"
        },
        "post_only_samplesheet": {
          "type": "string",
          "default": "",
          "description": "Post-only samplesheet (optional when run_sarek=false). CSV with columns: sample,vcf,bam[,bai].",
          "fa_icon": "fas fa-file-csv",
          "format": "file-path",
          "mimetype": "text/csv",
          "pattern": "^\\S*\\.csv$"
        }
      }
    },

    "post_sarek": {
      "title": "Post-Sarek annotation (VEP & resources)",
      "type": "object",
      "fa_icon": "fas fa-dna",
      "properties": {
        "vep_cache":      { "type": "string", "description": "Path/URI to VEP cache root.", "format": "directory-path" },
        "vep_plugins":    { "type": "string", "description": "Directory with VEP plugins.",   "format": "directory-path" },
        "vep_fasta":      { "type": "string", "description": "Reference FASTA for VEP.",      "format": "file-path", "pattern": "^\\S+\\.f(ast)?a(\\.gz)?$" },
        "gnomad_vcf":     { "type": "string", "description": "gnomAD VCF (optional).",        "format": "file-path", "pattern": "^\\S+\\.vcf(\\.gz)?$" },
        "revel_vcf":      { "type": "string", "description": "REVEL TSV/VCF (bgzipped).",     "format": "file-path", "pattern": "^\\S+\\.(vcf|tsv)(\\.gz)?$" },
        "alpha_missense_vcf": { "type": "string", "description": "AlphaMissense TSV/VCF (bgzipped).", "format": "file-path", "pattern": "^\\S+\\.(vcf|tsv)(\\.gz)?$" },
        "clinvar_vcf":    { "type": "string", "description": "ClinVar VCF (bgzipped).",       "format": "file-path", "pattern": "^\\S+\\.vcf(\\.gz)?$" }
      }
    }
  },

  "allOf": [
    { "$ref": "#/$defs/io_options" },
    { "$ref": "#/$defs/sarek_control" },
    { "$ref": "#/$defs/post_sarek" }
  ],

  "additionalProperties": true
}
