// ------------------------------------------------------------
// Bionl_Lean_Call — base config + post-Sarek containers
// ------------------------------------------------------------
// Pull Sarek’s own config so its labels/params match upstream
includeConfig 'external/sarek/nextflow.config'
includeConfig 'conf/sarek_override.config'


params {
  // Default fallback (only used if CLI doesn't pass --input)
  //input   = "data/sarek_sample_sheet.csv"
  //outdir  = "results/sarek"
  //bed     = "data/annotated_merged_MANE_deduped.bed"

  // If you invoke nf-core/sarek upstream, these help pin it
  sarek_rev     = "3.5.1"
  sarek_profile = "docker"
  genome          = "GATK.GRCh38"
  igenomes_ignore = false
  //fasta           = "/home/alkhatib/vep_data/GRCh38_chr22.fa"
  //fasta_fai           = "/home/alkhatib/vep_data/GRCh38_chr22.fa.fai"
  //fasta_gzi           = "/home/alkhatib/vep_data/Homo_sapiens.GRCh38.dna.toplevel.fa.gz.gzi"
  //fasta_dict           = "/home/alkhatib/vep_data/Homo_sapiens.GRCh38.dna.toplevel.dict"
  tools           = "deepvariant"           // e.g. "deepvariant,mutect2"
  skip_tools      = "baserecalibrator"
  save_mapped     = true
  save_output_as_bam = true
  validate_params = false

  // VEP / annotation (GCS — Bionl)
  vep_cache          = "gs://vep-data-vaic/vep_data/cache"
  vep_fasta          = "gs://vep-data-vaic/vep_data/Homo_sapiens.GRCh38.dna.toplevel.fa.gz"
  //vep_fasta          = "/home/alkhatib/vep_data/Homo_sapiens.GRCh38.dna.toplevel.fa.gz"
  gnomad_vcf         = "gs://vep-data-vaic/vep_data/somatic-hg38_af-only-gnomad.hg38.vcf.gz"
  revel_vcf          = "gs://vep-data-vaic/vep_data/new_tabbed_revel_grch38.tsv.gz"
  alpha_missense_vcf = "gs://vep-data-vaic/vep_data/AlphaMissense_hg38.tsv.gz"
  clinvar_vcf        = "gs://vep-data-vaic/vep_data/ClinVar/clinvar.chr.vcf.gz"
  vep_plugins        = "gs://vep-data-vaic/vep_plugins"
}

// ---------------- Process defaults ----------------
process {
  cpus   = 8
  memory = '32 GB'
  time   = '12h'
  disk = '100 GB'

  errorStrategy = 'terminate'
  maxRetries    = 4
  retryDelay    = '2 min'

  publishDir = [
    path   : { "results/${task.process.tokenize(':')[-1].toLowerCase()}" },
    mode   : 'copy',
    enabled: true
  ]
}

// ---------------- Executor ----------------
executor {
  name      = 'local'
  queueSize = 100
}

// ---------------- Containers ----------------
//singularity {
//      enabled    = true
//      autoMounts = true
//      cacheDir   = "${workflow.projectDir}/.singularity"  // or a persistent path
//    }
docker.enabled = true

//
// Default container for post-Sarek steps (bcftools-heavy)
process.container = 'quay.io/biocontainers/bcftools:1.20--h8b25389_0'

//// Per-process overrides that differ from default
process {
  withName: 'RunSarek' {
        container = 'ghcr.io/nextflow-io/nextflow:24.10.0'
      }
  withName: 'VEP_Annotate' {
    container = 'ensemblorg/ensembl-vep:release_114.2'
    // Using GCS assets, so no local mount. If you ever switch to local:
    // containerOptions = "-u ${System.getenv('MY_UID')}:${System.getenv('MY_GID')} -v ${params.vep_cache}:/cache:ro"
  }

  withName: 'MosdepthRun' {
    container = 'quay.io/biocontainers/mosdepth:0.3.8--hdfd78af_1'
  }
  withName: 'SummarizeMosdepth' {
    container = 'python:3.10-slim'
  }
  withName: "CoverageGapsAnnotation"{
    container = 'quay.io/biocontainers/bedtools:2.31.1--hf5e1c6e_2' 
  }

  withName: 'CoverageSummary' {
    container = 'quay.io/biocontainers/bedtools:2.31.1--hf5e1c6e_2'
  }
  withName: /^(BedFilterBAM|R1R2Ratio|ForwardReverseRatio|SamtoolsFlagstat|SamtoolsStats|SexCheck)$/ {
    container = 'quay.io/biocontainers/samtools:1.20--h50ea8bc_0'
  }

  // NOTE: BedFilterVCF / NormalizeVCF / FilterVCF / AddVAF / BcftoolsStats
  // inherit the default bcftools container above — no need to override.
}

// ---------------- Metadata & reports ----------------
manifest {
  name        = 'Bionl_Lean_Call'
  author      = 'Bionl'
  description = 'Germline ACMG-SF–focused post-Sarek QC/annotation/reporting.'
  version     = '1.0.0'
}

report   { enabled = true; file = "results/pipeline_report.html";   overwrite = true }
timeline { enabled = true; file = "results/timeline_report.html";   overwrite = true }
trace    { enabled = true; file = "results/trace.txt";              overwrite = true }

// (Optional) auto-include resource overrides if you don’t want to pass -c
// includeConfig 'conf/sarek_override.config'

process {
  withLabel: process_high   { cpus = 16;  memory = '32 GB'; time = '24h' }
  withLabel: process_medium { cpus = 8;  memory = '16 GB'; time = '12h' }
}
// Pin the plugin (recommended)
plugins {
  id 'nf-schema@2.4.0'
}